#include <fstream>
#include <queue>
#include <stack>
#include <list>

using namespace std;

int main() {

  ifstream in("input.txt");
  ofstream out("out.txt");

  queue<int> q;
  stack<int> s;
  list<int> l;

  while (in.peek() != EOF) {
    int i;
    in >> i;
    q.push(i);
    s.push(i);
    l.push_back(i);
  }

  queue<int> newQ;
  int lastInt = q.front();
  q.pop();
  newQ.push(lastInt);
  do {
    if (q.front() != lastInt) {
      lastInt = q.front();
      q.pop();
      newQ.push(lastInt);
    }
    else {
      q.pop();
    }
  } while (!q.empty());

  stack<int> newS;
  lastInt = s.top();
  s.pop();
  newS.push(lastInt);
  do {
    if (s.top() != lastInt) {
      lastInt = s.top();
      s.pop();
      newS.push(lastInt);
    }
    else {
      s.pop();
    }
  } while (!s.empty());

  list<int> newL;
  lastInt = l.front();
  l.pop_front();
  newL.push_back(lastInt);
  do {
    if (l.front() != lastInt) {
      lastInt = l.front();
      l.pop_front();
      newL.push_back(lastInt);
    }
    else {
      l.pop_front();
    }
  } while (!l.empty());

  out << "Stack: ";
  while (!newS.empty()) {
    out << newS.top() << ' ';
    newS.pop();
  }

  out << "\nQueue: ";
  while (!newQ.empty()) {
    out << newQ.front() << ' ';
    newQ.pop();
  }

  out << "\nList: ";
  while (!newL.empty()) {
    out << newL.front() << ' ';
    newL.pop_front();
  }

  return 0;
}
