#include <iostream>
using namespace std;

// Определение класса
class MyClass {
private:
    int myNumber; // Приватное поле класса

public:
    // Конструктор класса
    MyClass(int num) {
        myNumber = num;
    }

    // Метод для установки значения поля
    void setNumber(int num) {
        myNumber = num;
    }

    // Метод для получения значения поля
    int getNumber() {
        return myNumber;
    }
};

int main() {
    // Создание объекта класса MyClass
    MyClass obj(10);

    // Использование методов объекта для установки и получения значения поля
    obj.setNumber(20);
    cout << "Number: " << obj.getNumber() << endl;

    return 0;
}
/*
В этом примере класс MyClass содержит приватное поле myNumber и два публичных метода: setNumber для установки значения этого поля и getNumber для его получения. Также определен конструктор класса MyClass, который устанавливает начальное значение поля myNumber.

В функции main() создается объект класса MyClass, и затем с его помощью вызываются методы для установки значения поля и вывода этого значения на экран.

Основные концепции, использованные в этом примере:

Классы: Определение класса с помощью ключевого слова class.
Поля класса: Переменные, определенные внутри класса, являются его полями. Они могут быть приватными (только для внутреннего использования класса), защищенными (доступны внутри класса и его наследников) или публичными (доступны извне класса).
Методы класса: Функции, определенные внутри класса, называются его методами. Они могут работать с полями класса.
Конструкторы: Специальные методы, вызываемые при создании объекта класса, используются для инициализации объекта.
Объекты: Экземпляры классов, созданные на основе его определения.*/